# security:
#     encoders:
#         FOS\UserBundle\Model\UserInterface: sha512

#     role_hierarchy:
#         ROLE_ADMIN:       ROLE_USER
#         ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

#     providers:
#         fos_userbundle:
#             id: fos_user.user_provider.username

#     firewalls:
#         main:
#             pattern: ^/
#             form_login:
#                 provider: fos_userbundle
#                 csrf_provider: form.csrf_provider
#             logout:       true
#             anonymous:    true

#     access_control:
#         - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/admin/, role: ROLE_ADMIN }


# app/config/security.yml
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v2/auth_login_check
                login_path: /oauth/v2/auth_login
            anonymous: true
        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true

    access_control:
        # You can omit this if /api can be accessed both authenticated and anonymously
        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/oauth/v2/auth_login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
