0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/0.10.8/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'bower' ]
2 info using npm@1.2.23
3 info using node@v0.10.8
4 verbose read json /usr/local/share/npm/lib/package.json
5 verbose read json /usr/local/share/npm/lib/package.json
6 verbose cache add [ 'bower', null ]
7 verbose cache add name=undefined spec="bower" args=["bower",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'bower',
8 verbose parsed url   path: 'bower',
8 verbose parsed url   href: 'bower' }
9 silly lockFile 206e3ce5-bower bower
10 verbose lock bower /Users/shady/.npm/206e3ce5-bower.lock
11 silly lockFile 206e3ce5-bower bower
12 silly lockFile 206e3ce5-bower bower
13 verbose addNamed [ 'bower', '' ]
14 verbose addNamed [ null, '' ]
15 silly lockFile 1240aab1-bower bower@
16 verbose lock bower@ /Users/shady/.npm/1240aab1-bower.lock
17 silly addNameRange { name: 'bower', range: '', hasData: false }
18 verbose url raw bower
19 verbose url resolving [ 'https://registry.npmjs.org/', './bower' ]
20 verbose url resolved https://registry.npmjs.org/bower
21 info trying registry request attempt 1 at 00:39:29
22 verbose etag "C9B94VX23J5BJGVL8K80N0156"
23 http GET https://registry.npmjs.org/bower
24 http 304 https://registry.npmjs.org/bower
25 silly registry.get cb [ 304,
25 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
25 silly registry.get     etag: '"C9B94VX23J5BJGVL8K80N0156"',
25 silly registry.get     date: 'Thu, 27 Jun 2013 22:39:30 GMT',
25 silly registry.get     'content-length': '0' } ]
26 verbose etag bower from cache
27 silly addNameRange number 2 { name: 'bower', range: '', hasData: true }
28 silly addNameRange versions [ 'bower',
28 silly addNameRange   [ '0.1.0',
28 silly addNameRange     '0.1.2',
28 silly addNameRange     '0.1.3',
28 silly addNameRange     '0.2.0',
28 silly addNameRange     '0.3.0',
28 silly addNameRange     '0.3.1',
28 silly addNameRange     '0.3.2',
28 silly addNameRange     '0.4.0',
28 silly addNameRange     '0.5.0',
28 silly addNameRange     '0.5.1',
28 silly addNameRange     '0.6.0',
28 silly addNameRange     '0.6.1',
28 silly addNameRange     '0.6.2',
28 silly addNameRange     '0.6.3',
28 silly addNameRange     '0.6.4',
28 silly addNameRange     '0.6.5',
28 silly addNameRange     '0.6.6',
28 silly addNameRange     '0.6.7',
28 silly addNameRange     '0.6.8',
28 silly addNameRange     '0.7.0',
28 silly addNameRange     '0.7.1',
28 silly addNameRange     '0.8.0',
28 silly addNameRange     '0.8.1',
28 silly addNameRange     '0.8.2',
28 silly addNameRange     '0.8.3',
28 silly addNameRange     '0.8.4',
28 silly addNameRange     '0.8.5',
28 silly addNameRange     '0.8.6',
28 silly addNameRange     '0.9.0',
28 silly addNameRange     '0.9.1',
28 silly addNameRange     '0.9.2' ] ]
29 verbose addNamed [ 'bower', '0.9.2' ]
30 verbose addNamed [ '0.9.2', '0.9.2' ]
31 silly lockFile 890d62ee-bower-0-9-2 bower@0.9.2
32 verbose lock bower@0.9.2 /Users/shady/.npm/890d62ee-bower-0-9-2.lock
33 verbose read json /Users/shady/.npm/bower/0.9.2/package/package.json
34 silly lockFile 890d62ee-bower-0-9-2 bower@0.9.2
35 silly lockFile 890d62ee-bower-0-9-2 bower@0.9.2
36 silly lockFile 1240aab1-bower bower@
37 silly lockFile 1240aab1-bower bower@
38 silly resolved [ { name: 'bower',
38 silly resolved     description: 'The browser package manager.',
38 silly resolved     version: '0.9.2',
38 silly resolved     author: { name: 'Twitter' },
38 silly resolved     licenses: [ [Object] ],
38 silly resolved     repository: { type: 'git', url: 'https://github.com/bower/bower' },
38 silly resolved     main: 'lib',
38 silly resolved     homepage: 'http://bower.io/',
38 silly resolved     engines: { node: '>=0.8.0' },
38 silly resolved     dependencies:
38 silly resolved      { abbrev: '~1.0.4',
38 silly resolved        archy: '~0.0.2',
38 silly resolved        async: '~0.2.5',
38 silly resolved        colors: '~0.6.0-1',
38 silly resolved        fstream: '~0.1.19',
38 silly resolved        glob: '~3.1.14',
38 silly resolved        'hogan.js': '~2.0.0',
38 silly resolved        lodash: '~1.0.1',
38 silly resolved        mkdirp: '~0.3.4',
38 silly resolved        nopt: '~2.0.0',
38 silly resolved        promptly: '~0.1.0',
38 silly resolved        rc: '~0.0.6',
38 silly resolved        'read-package-json': '~0.1.8',
38 silly resolved        request: '~2.11.4',
38 silly resolved        rimraf: '~2.0.3',
38 silly resolved        semver: '~1.1.0',
38 silly resolved        stable: '~0.1.2',
38 silly resolved        tar: '~0.1.13',
38 silly resolved        tmp: '~0.0.17',
38 silly resolved        unzip: '0.1.7',
38 silly resolved        'update-notifier': '~0.1.3' },
38 silly resolved     scripts: { test: 'mocha --reporter spec --timeout 40000' },
38 silly resolved     devDependencies: { mocha: '~1.8.1', nock: '~0.17.3' },
38 silly resolved     bin: { bower: 'bin/bower' },
38 silly resolved     preferGlobal: true,
38 silly resolved     readme: '# BOWER [![Build Status](https://secure.travis-ci.org/bower/bower.png?branch=master)](http://travis-ci.org/bower/bower)\n\nBower is a package manager for the web. It offers a generic, unopinionated\nsolution to the problem of **front-end package management**, while exposing the\npackage dependency model via an API that can be consumed by a more opinionated\nbuild stack. There are no system wide dependencies, no dependencies are shared\nbetween different apps, and the dependency tree is flat.\n\nBower runs over Git, and is package-agnostic. A packaged component can be made\nup of any type of asset, and use any type of transport (e.g., AMD, CommonJS,\netc.).\n\n[View all packages available through Bower\'s registry](http://sindresorhus.com/bower-components/).\n\n\n## Installing Bower\n\nBower depends on [Node](http://nodejs.org/) and [npm](http://npmjs.org/). It\'s\ninstalled globally using npm:\n\n```\nnpm install -g bower\n```\n\n\n## Usage\n\nMuch more information is available via `bower help` once it\'s installed. This\nis just enough to get you started.\n\n### Installing packages and dependencies\n\nBower offers several ways to install packages:\n\n```bash\n# Using the dependencies listed in the current directory\'s bower.json\nbower install\n# Using a local or remote package\nbower install <package>\n# Using a specific Git-tagged version from a remote package\nbower install <package>#<version>\n```\n\nWhere `<package>` can be any one of the following:\n\n* A name that maps to a package registered with Bower, e.g, `jquery`. ‡\n* A remote Git endpoint, e.g., `git://github.com/someone/some-package.git`. Can be\n  public or private. ‡\n* A local Git endpoint, i.e., a folder that\'s a Git repository. ‡\n* A shorthand endpoint, e.g., `someone/some-package` (defaults to GitHub). ‡\n* A URL to a file, including `zip` and `tar.gz` files. It\'s contents will be\n  extracted.\n\n‡ These types of `<package>` make Git tags available. You can specify a\n[semver](http://semver.org/) tag to fetch a specific release, and lock the\npackage to that version.\n\nAll package contents are installed in the `components` directory by default.\nYou should **never** directly modify the contents of this directory.\n\nUsing `bower list` will show all the packages that are installed locally.\n\n**N.B.** If you aren\'t authoring a package that is intended to be consumed by\nothers (e.g., you\'re building a web app), you should always check installed\npackages into source control.\n\n### Finding packages\n\nTo search for packages registered with Bower:\n\n```\nbower search [<name>]\n```\n\nUsing just `bower search` will list all packages in the registry.\n\n### Using packages\n\nThe easiest approach is to use Bower statically, just reference the package\'s\ninstalled components manually using a `script` tag:\n\n```html\n<script src="/bower_components/jquery/index.js"></script>\n```\n\nFor more complex projects, you\'ll probably want to concatenate your scripts or\nuse a module loader. Bower is just a package manager, but there are plenty of\nother tools -- such as [Sprockets](https://github.com/sstephenson/sprockets)\nand [RequireJS](http://requirejs.org/) -- that will help you do this.\n\n### Registering packages\n\nTo register a new package, there **must** be a valid manifest JSON in the\ncurrent working directory, your package **must** be available at a Git endpoint\n(e.g., GitHub), and it should use [semver](http://semver.org/) Git tags. Then\nrun:\n\n```\nbower register <my-package-name> <git-endpoint>\n```\n\nThe Bower registry does not have authentication or user management. It\'s on a\nfirst come, first served basis. Think of it like a URL shortener. Now anyone\ncan run `bower install <my-package-name>`, and get your library installed.\n\nThere is no direct way to unregister a package yet. For now, you can [request a\npackage be unregistered](https://github.com/bower/bower/issues/120).\n\n### Uninstalling packages\n\nTo uninstall a locally installed package:\n\n```\nbower uninstall <package-name>\n```\n\n\n## Configuration\n\nBower can be configured using JSON in a `.bowerrc` file.\n\nGlobal configuration is handled by creating a `.bowerrc` in your home directory\n(i.e., `~/.bowerrc`).  Local configuration is handled by creating a `.bowerrc`\nin your project\'s directory, allowing you to version a project-specific Bower\nconfiguration with the rest of your code base.\n\nBower will combine the local and global configurations (with local settings\ntaking precedence).\n\nThe `.bowerrc` defines several options:\n\n* `directory`: Set the default directory to install packaged components into.\n* `endpoint`: Set a custom registry endpoint.\n* `json`: Set the default JSON file for Bower to use when resolving dependencies.\n* `searchpath`: An array of additional URLs pointing to read-only Bower registries.\n* `shorthand_resolver`: Define a custom template for shorthand package names.\n\n```json\n{\n  "directory": "bower_components",\n  "endpoint": "https://bower.mycompany.com",\n  "json": "bower.json",\n  "searchpath": [\n    "https://bower.herokuapp.com"\n  ],\n  "shorthand_resolver": "git://example.com/{{{ organization }}}/{{{ package }}}.git"\n}\n```\n\nThe `searchpath` array is useful if your organization wishes to maintain a\nprivate registry of packages while also taking advantage of public Bower\nregistries. If a package is not found at your private endpoint, Bower will\nconsult the registries specified in the `searchpath` array.\n\nThe `shorthand_resolver` key provides support for defining a custom template\nwhich Bower uses when constructing a URL for a given shorthand. For example, if\na shorthand of `twitter/flight` or `twitter/flight#v1.0.0` is specified in the\npackage manifest, the following data can be referenced from within the\n`.bowerrc` as part of the `shorthand_resolver` template:\n\n* `endpoint`: `twitter/flight`\n* `organization`: `twitter`\n* `package`: `flight`\n\n**N.B.** To run your own Bower Endpoint for custom packages that are behind a\nfirewall, you can use a simple implementation of the [Bower\nServer](https://github.com/bower/bower-server).\n\n\n## Defining a package\n\nYou must create a JSON file -- `bower.json` by default -- in your project\'s\nroot, and specify all of its dependencies. This is similar to Node\'s\n`package.json`, or Ruby\'s `Gemfile`, and is useful for locking down a project\'s\ndependencies.\n\nYou can interactively create a `bower.json` with the following command:\n\n```\nbower init\n```\n\nThe `bower.json` defines several options:\n\n* `name` (required): The name of your package.\n* `version`: A semantic version number (see [semver](http://semver.org/)).\n* `main` [string|array]: The primary endpoints of your package.\n* `ignore` [array]: An array of paths not needed in production that you want\n  Bower to ignore when installing your package.\n* `dependencies` [hash]: Packages your package depends upon in production.\n* `devDependencies` [hash]: Development dependencies.\n\n```json\n{\n  "name": "my-project",\n  "version": "1.0.0",\n  "main": "path/to/main.css",\n  "ignore": [\n    ".jshintrc",\n    "**/*.txt"\n  ],\n  "dependencies": {\n    "<name>": "<version>",\n    "<name>": "<folder>",\n    "<name>": "<package>"\n  },\n  "devDependencies": {\n    "<test-framework-name>": "<version>"\n  }\n}\n```\n\n\n## Consuming a package\n\nBower also makes available a source mapping. This can be used by build tools to\neasily consume Bower packages.\n\nIf you pass the `--map` option to Bower\'s `list` command, it will generate JSON\nwith dependency objects. Alternatively, you can pass the `--paths` option to\nthe `list` command to get a simple path-to-name mapping:\n\n```json\n{\n  "backbone": "bower_components/backbone/index.js",\n  "jquery": "bower_components/jquery/index.js",\n  "underscore": "bower_components/underscore/index.js"\n}\n```\n\n\n## Programmatic API\n\nBower provides a powerful, programmatic API. All commands can be accessed\nthrough the `bower.commands` object.\n\n```js\nvar bower = require(\'bower\');\n\nbower.commands\n  .install(paths, options)\n  .on(\'end\', function (data) {\n    data && console.log(data);\n  });\n\nbower.commands\n  .search(\'jquery\', {})\n  .on(\'packages\', function(packages) {\n    // `packages` is a list of packages returned by searching for \'jquery\'\n  });\n```\n\nCommands emit four types of events: `data`, `end`, `result`, and `error`.\n\n`error` will only be emitted if something goes wrong. Not all commands emit all\nevents; for a detailed look, check out the code in `lib/commands`.\n\n`data` is typically a colorized string, ready to show to an end user. `search`\nand `lookup` emit `packages` and `package`, respectively. Those events contain\na JSON representation of the result of the command.\n\nFor a better of idea how this works, you may want to check out [our bin\nfile](https://github.com/bower/bower/blob/master/bin/bower).\n\nFor the install command, there is an additional `package` event that is emitted\nfor each installed/uninstalled package.\n\n\n## Completion (experimental)\n\nBower now has an experimental `completion` command that is based on, and works\nsimilarly to the [npm completion](https://npmjs.org/doc/completion.html). It is\nnot available for Windows users.\n\nThis command will output a Bash / ZSH script to put into your `~/.bashrc`,\n`~/.bash_profile`, or `~/.zshrc` file.\n\n```\nbower completion >> ~/.bash_profile\n```\n\n\n## A note for Windows users\n\nTo use Bower on Windows, you must install\n[msysgit](http://code.google.com/p/msysgit/) correctly. Be sure to check the\noption shown below:\n\n![msysgit](http://f.cl.ly/items/2V2O3i1p3R2F1r2v0a12/mysgit.png)\n\nNote that if you use TortoiseGit and if Bower keeps asking for your SSH\npassword, you should add the following environment variable: `GIT_SSH -\nC:\\Program Files\\TortoiseGit\\bin\\TortoisePlink.exe`. Adjust the `TortoisePlink`\npath if needed.\n\n\n## Contact\n\nHave a question?\n\n* [StackOverflow](http://stackoverflow.com/questions/tagged/bower)\n* [Mailinglist](http://groups.google.com/group/twitter-bower) - twitter-bower@googlegroups.com\n* [\\#bower](http://webchat.freenode.net/?channels=bower) on Freenode\n\n\n## Contributing to this project\n\nAnyone and everyone is welcome to contribute. Please take a moment to\nreview the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Bug reports](CONTRIBUTING.md#bugs)\n* [Feature requests](CONTRIBUTING.md#features)\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n\n\n## Authors\n\n* [@fat](https://github.com/fat)\n* [@maccman](https://github.com/maccman)\n* [@satazor](https://github.com/satazor)\n\nThanks for assistance and contributions:\n\n* [@addyosmani](https://github.com/addyosmani)\n* [@angus-c](https://github.com/angus-c)\n* [@borismus](https://github.com/borismus)\n* [@carsonmcdonald](https://github/@carsonmcdonald)\n* [@chriseppstein](https://github.com/chriseppstein)\n* [@danwrong](https://github.com/danwrong)\n* [@desandro](https://github.com/desandro)\n* [@hemanth](https://github.com/hemanth)\n* [@isaacs](https://github.com/isaacs)\n* [@josh](https://github.com/josh)\n* [@jrburke](https://github.com/jrburke)\n* [@marcelombc](https://github.com/marcelombc)\n* [@mklabs](https://github.com/mklabs)\n* [@paulirish](https://github.com/paulirish)\n* [@richo](https://github.com/richo)\n* [@rvagg](https://github.com/rvagg)\n* [@sindresorhus](https://github.com/sindresorhus)\n* [@SlexAxton](https://github.com/SlexAxton)\n* [@sstephenson](https://github.com/sstephenson)\n* [@tomdale](https://github.com/tomdale)\n* [@uzquiano](https://github.com/uzquiano)\n* [@visionmedia](https://github.com/visionmedia)\n* [@wagenet](https://github.com/wagenet)\n* [@wibblymat](https://github.com/wibblymat)\n* [@wycats](https://github.com/wycats)\n\n\n## License\n\nCopyright 2012 Twitter, Inc.\n\nLicensed under the MIT License\n',
38 silly resolved     readmeFilename: 'README.md',
38 silly resolved     bugs: { url: 'https://github.com/bower/bower/issues' },
38 silly resolved     _id: 'bower@0.9.2',
38 silly resolved     _from: 'bower@' } ]
39 info install bower@0.9.2 into /usr/local/share/npm/lib
40 info installOne bower@0.9.2
41 verbose from cache /Users/shady/.npm/bower/0.9.2/package/package.json
42 info /usr/local/share/npm/lib/node_modules/bower unbuild
43 verbose read json /usr/local/share/npm/lib/node_modules/bower/package.json
44 info preuninstall bower@0.9.2
45 info uninstall bower@0.9.2
46 verbose true,/usr/local/share/npm/lib/node_modules,/usr/local/share/npm/lib/node_modules unbuild bower@0.9.2
47 verbose /usr/local/share/npm/bin,[object Object] binRoot
48 info postuninstall bower@0.9.2
49 info /usr/local/share/npm/lib/node_modules/bower unbuild
50 verbose read json /usr/local/share/npm/lib/node_modules/bower/package.json
51 info preuninstall bower@0.9.2
52 info uninstall bower@0.9.2
53 verbose true,/usr/local/share/npm/lib/node_modules,/usr/local/share/npm/lib/node_modules unbuild bower@0.9.2
54 verbose /usr/local/share/npm/bin,[object Object] binRoot
55 info postuninstall bower@0.9.2
56 error error rolling back Error: EACCES, unlink '/usr/local/share/npm/lib/node_modules/bower/.jshintrc'
56 error error rolling back  bower@0.9.2 { [Error: EACCES, unlink '/usr/local/share/npm/lib/node_modules/bower/.jshintrc']
56 error error rolling back   errno: 3,
56 error error rolling back   code: 'EACCES',
56 error error rolling back   path: '/usr/local/share/npm/lib/node_modules/bower/.jshintrc' }
57 error Error: EACCES, unlink '/usr/local/share/npm/lib/node_modules/bower/.jshintrc'
57 error  { [Error: EACCES, unlink '/usr/local/share/npm/lib/node_modules/bower/.jshintrc']
57 error   errno: 3,
57 error   code: 'EACCES',
57 error   path: '/usr/local/share/npm/lib/node_modules/bower/.jshintrc' }
58 error Please try running this command again as root/Administrator.
59 error System Darwin 12.4.0
60 error command "/usr/local/Cellar/node/0.10.8/bin/node" "/usr/local/bin/npm" "install" "-g" "bower"
61 error cwd /Users/shady/Workspace/scrumbag
62 error node -v v0.10.8
63 error npm -v 1.2.23
64 error path /usr/local/share/npm/lib/node_modules/bower/.jshintrc
65 error code EACCES
66 error errno 3
67 error stack Error: EACCES, unlink '/usr/local/share/npm/lib/node_modules/bower/.jshintrc'
68 verbose exit [ 3, true ]
